{"version":3,"sources":["assets/images/geography.png","assets/images/history.jpg","assets/images/social.png","assets/images/music.jpg","assets/images/loading.gif","assets/images/not-found.png","fakeProvider/data.js","components/header/index.tsx","components/play/index.tsx","components/chooseQuiz/index.tsx","shared/Loading.tsx","shared/CustomButton.tsx","shared/Wrapper.tsx","components/chooseQuiz/Intro.tsx","components/chooseQuiz/EndGame.tsx","components/chooseQuiz/Component.tsx","components/List/index.tsx","components/List/User.tsx","components/NotFound/index.tsx","components/Alertbox/index.tsx","components/login/index.tsx","components/register/index.tsx","App.tsx","redux/index.ts","index.tsx"],"names":["module","exports","types","name","image","geography","history","social","music","questions","question","answers","answer","correct","connect","state","ownProps","user","quiz","dispatch","goBack","type","removeUser","back","useHistory","className","to","style","cursor","onClick","points","sessionStorage","removeItem","push","Play","activateQuiz","React","useState","quizes","setQuizes","quizHandler","useEffect","setTimeout","map","index","key","backgroundImage","animation","zIndex","pathname","auth","Loading","src","turtle","alt","CustomButton","label","action","disabled","Boolean","Wrapper","children","Intro","setStarted","checked","setChecked","color","onChange","setUser","data","payload","setQuiz","achievedPoints","fetch","method","mode","cache","credentials","headers","Authorization","getItem","redirect","referrerPolicy","body","JSON","stringify","then","res","json","pts","marginTop","reducer","processAnswer","initLoading","gameStarted","gameFinished","params","useParams","useReducer","setQuestions","indexN","setIndex","setPoints","a","component","toLowerCase","fetchQuiz","handleAnswer","ans","divs","document","querySelectorAll","classList","add","correctInd","findIndex","obj","Promise","forEach","div","remove","usr","users","setUsers","handleUser","showContext","e","preventDefault","Fragment","onContextMenu","User","NotFound","sova","AlertBox","message","inSide","setAlert","loading","setLoading","setAnimation","top","username","password","submitHandler","console","log","process","API_HOST","response","status","setItem","token","onSubmit","target","value","margin","alert","setBack","listen","location","getUser","defaultPath","exact","path","initialState","store","createStore","createBrowserHistory","render","getElementById"],"mappings":"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","file":"static/js/main.869044c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/geography.3e78c53f.png\";","module.exports = __webpack_public_path__ + \"static/media/history.5a99e060.jpg\";","module.exports = __webpack_public_path__ + \"static/media/social.8c6b6452.png\";","module.exports = __webpack_public_path__ + \"static/media/music.1376d7e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/loading.aa275084.gif\";","module.exports = __webpack_public_path__ + \"static/media/not-found.616bc31c.png\";","import geography from '../assets/images/geography.png';\r\nimport history from '../assets/images/history.jpg';\r\nimport social from '../assets/images/social.png';\r\nimport music from '../assets/images/music.jpg';\r\nexport const types = [\r\n    {\r\n        name: 'Geography',\r\n        image: geography,\r\n    },\r\n    {\r\n        name: 'History',\r\n        image: history,\r\n    },\r\n    {\r\n        name: 'Social',\r\n        image: social,\r\n    },\r\n    {\r\n        name: 'Music',\r\n        image: music,\r\n    },\r\n];\r\nexport const questions = [\r\n    {\r\n        question: 'RARARA',\r\n        answers: [\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n        ],\r\n    },\r\n];\r\nexport const users = [\r\n    {\r\n        name: 'Danilo',\r\n        points: 0,\r\n        password: 'logika123',\r\n    },\r\n];\r\n","import React from 'react';\r\nimport User from '../../interfaces/User';\r\nimport { connect } from 'react-redux';\r\nimport State from '../../interfaces/State';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\ninterface IProps {\r\n    user: User | null;\r\n    quiz: boolean;\r\n    goBack: Function;\r\n    back: boolean;\r\n    removeUser: Function;\r\n}\r\n\r\nconst mapStateToProps = (state: State, ownProps: object) => ({\r\n    user: state.user,\r\n    quiz: state.quiz,\r\n});\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    goBack: () => dispatch({ type: 'FINISH_QUIZ' }),\r\n    removeUser: () => dispatch({ type: 'REMOVE_USER' }),\r\n});\r\n\r\nconst Header: React.FC<IProps> = ({ user, quiz, goBack, back, removeUser }) => {\r\n    const history = useHistory();\r\n    const handleLogOut = () => {\r\n        sessionStorage.removeItem('user_token');\r\n        removeUser();\r\n        history.push('/');\r\n    };\r\n    const handleBack = () => {\r\n        history.goBack();\r\n        goBack();\r\n    };\r\n    return (\r\n        <div className='header'>\r\n            <div className='user-header-text'>\r\n                <Link className='link-to-home' to='/'>\r\n                    Home\r\n                </Link>\r\n                {user ? (\r\n                    !quiz ? (\r\n                        <span>\r\n                            Hello {user.name},{user.points} points\r\n                        </span>\r\n                    ) : (\r\n                        <span\r\n                            style={{ cursor: 'pointer' }}\r\n                            onClick={handleBack}>\r\n                            Go back\r\n                        </span>\r\n                    )\r\n                ) : (\r\n                    <span>Hello there, guest!</span>\r\n                )}\r\n            </div>\r\n            {!user ? (\r\n                <div className='login-register'>\r\n                    <Link to='/login'>Login</Link>\r\n                    <Link to='/register'>Register</Link>\r\n                </div>\r\n            ) : (\r\n                <div className='login-register'>\r\n                    <Link to='/list'>List</Link>\r\n                    <Link onClick={handleLogOut} to='/'>\r\n                        Logout\r\n                    </Link>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nconst Play: React.FC = () => {\r\n    return (\r\n        <div className='start-quiz'>\r\n            <Link to='/choose-quiz'>Start</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport { types } from '../../fakeProvider/data';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './index.css';\r\n\r\ninterface IProps {\r\n    activateQuiz: Function;\r\n}\r\nconst ChooseQuizComponent: React.FC<IProps> = ({ activateQuiz }) => {\r\n    const [quizes, setQuizes] = React.useState<\r\n        { name: string; image: string }[]\r\n    >();\r\n    const quizHandler = () => setQuizes(types);\r\n    React.useEffect(() => {\r\n        setTimeout(quizHandler, 50);\r\n    }, []);\r\n    return (\r\n        <div className='quiz-selection'>\r\n            {quizes &&\r\n                quizes.map((quiz, index) => (\r\n                    <div\r\n                        key={index}\r\n                        style={{\r\n                            backgroundImage: `url(${quiz.image})`,\r\n                            animation: `roll-in 0.5s ease-in forwards ${\r\n                                index / 4\r\n                            }s`,\r\n                        }}\r\n                        className='quiz quiz-animate'>\r\n                        <Link\r\n                            onClick={() => activateQuiz()}\r\n                            className='quiz-title'\r\n                            style={{ zIndex: 1 }}\r\n                            to={{\r\n                                pathname: `/quiz/${quiz.name}`,\r\n                                state: {\r\n                                    auth: true,\r\n                                },\r\n                            }}>\r\n                            <span>{quiz.name}</span>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    activateQuiz: () => dispatch({ type: 'START_QUIZ' }),\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(ChooseQuizComponent);\r\n","import React from 'react';\r\nimport turtle from '../assets/images/loading.gif';\r\n\r\nconst Loading: React.FC = () => {\r\n    return (\r\n        <div className='loading'>\r\n            <div>\r\n                <img src={turtle} alt='Loading turtle' />\r\n            </div>\r\n            <div className='loading-text'>Loading, please wait...</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    label: string;\r\n    action?: Function;\r\n    style?: object;\r\n    type?: 'button' | 'submit' | 'reset';\r\n    disabled?: boolean;\r\n}\r\n\r\nconst CustomButton: React.FC<IProps> = ({\r\n    label,\r\n    action,\r\n    style,\r\n    type,\r\n    disabled,\r\n}) => {\r\n    return (\r\n        <button\r\n            className='button'\r\n            type={type ? type : 'button'}\r\n            disabled={Boolean(disabled)}\r\n            style={{ ...style }}\r\n            onClick={() => (action ? action() : {})}>\r\n            {label}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React from 'react';\r\n\r\ninterface IProps {\r\n    className?: string;\r\n}\r\n\r\nconst Wrapper: React.FC<IProps> = ({ children, className }) => {\r\n    return (\r\n        <div className={`wrapper ${className ? className : ''}`}>\r\n            {children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wrapper;\r\n","import React from 'react';\r\nimport CustomButton from '../../shared/CustomButton';\r\nimport Wrapper from '../../shared/Wrapper';\r\n\r\ninterface IProps {\r\n    name: string;\r\n    setStarted: Function;\r\n}\r\nconst Intro: React.FC<IProps> = ({ name, setStarted }) => {\r\n    const [checked, setChecked] = React.useState<boolean>(false);\r\n    return (\r\n        <Wrapper className='intro-div'>\r\n            <p>\r\n                Pozdrav ratnice, izabrao si kviz{' '}\r\n                <span style={{ color: '#b39ddb' }}>{name} </span>,\r\n            </p>\r\n            <p>\r\n                Pravila kviza su sledeca: <br />\r\n                <ul>\r\n                    <li>Za svako promaseno pitanje gubis 3 poena</li>\r\n                    <li>Za svako pogodjeno pitanje dobijas 5 poena</li>\r\n                    <li>\r\n                        Kviz mozes da napusits kad oces, ali u tom slucaju gubis\r\n                        prethodno steknute poene\r\n                    </li>\r\n                    <li>\r\n                        Poeni ti se sabiraju na kraju (racunajuci i izgubljene\r\n                        poene) i dodaju na tvom profilu\r\n                    </li>\r\n                    <li>Nemoj da varas!</li>\r\n                </ul>\r\n            </p>\r\n            <p>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={checked}\r\n                    onChange={() => setChecked(!checked)}\r\n                />{' '}\r\n                <span>Procitao sam sve i spreman sam da pocnem</span>\r\n                <br />\r\n                <CustomButton\r\n                    label='Zapocni kviz'\r\n                    disabled={!checked}\r\n                    action={() => setStarted()}\r\n                />\r\n            </p>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CustomButton from '../../shared/CustomButton';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Wrapper from '../../shared/Wrapper';\r\n\r\ninterface IProps {\r\n    achievedPoints: number;\r\n    user: {\r\n        name: string;\r\n        points: number;\r\n    };\r\n    setQuiz: Function;\r\n    setUser: Function;\r\n}\r\nconst getMulti = (pts: number) => (pts > 1 || pts === 0 ? 'poena' : 'poen');\r\n\r\nconst EndGame: React.FC<IProps> = ({\r\n    achievedPoints,\r\n    user,\r\n    setQuiz,\r\n    setUser,\r\n}) => {\r\n    React.useEffect(() => {\r\n        fetch('http://localhost:3000/update', {\r\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: 'Bearer ' + sessionStorage.getItem('user_token'),\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify({\r\n                points: achievedPoints,\r\n            }), // body data type must match \"Content-Type\" header\r\n        })\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setUser({ name: data.user, points: data.points });\r\n                setQuiz();\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Wrapper className='intro-div'>\r\n            <h1>Igra zavrsena!</h1>\r\n            <span>\r\n                Svaka cast {user.name}, uspio si da zaradis: {achievedPoints}{' '}\r\n                {getMulti(achievedPoints)}\r\n            </span>\r\n            <div className='stats'>\r\n                User points: {user.points - achievedPoints}\r\n                <br />\r\n                Earned points: {achievedPoints}\r\n                <div className='conclude'>\r\n                    Tvoj broj poena sad {user.points}\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <CustomButton\r\n                    style={{ marginTop: '16px' }}\r\n                    label='Go home'\r\n                    action={() => history.push('/')}\r\n                />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: {\r\n    user: { name: string; points: number };\r\n}) => ({\r\n    user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setUser: (data: object) => {\r\n        return dispatch({\r\n            type: 'SET_USER',\r\n            payload: { ...data },\r\n        });\r\n    },\r\n    setQuiz: () => {\r\n        dispatch({\r\n            type: 'FINISH_QUIZ',\r\n        });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EndGame);\r\n","import React, { useState, useReducer } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport State from '../../interfaces/State';\r\nimport Loading from '../../shared/Loading';\r\n\r\nimport Intro from './Intro';\r\nimport EndGame from './EndGame';\r\n\r\ninterface IProps {\r\n    quiz: boolean;\r\n    setUser: Function;\r\n    setQuiz: Function;\r\n}\r\n\r\nconst reducer = (\r\n    state = {\r\n        processAnswer: false,\r\n        initLoading: false,\r\n        gameStarted: false,\r\n        gameFinished: false,\r\n    },\r\n    { type, payload }: { type: string; payload?: object },\r\n) => {\r\n    if (type === 'SET_LOADING') {\r\n        return { ...state, initLoading: true };\r\n    }\r\n    if (type === 'FINISH_LOADING') {\r\n        return { ...state, initLoading: false };\r\n    }\r\n    if (type === 'FINISH_GAME') {\r\n        return { ...state, gameFinished: true };\r\n    }\r\n    if (type === 'RESET_LOADING') {\r\n        return { ...state, initLoading: false };\r\n    }\r\n    if (type === 'START_QUIZ') {\r\n        return { ...state, gameStarted: true };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst History: React.FC<IProps> = ({ quiz, setUser, setQuiz }) => {\r\n    const params = useParams<{ component: string }>();\r\n    const history = useHistory();\r\n\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        processAnswer: false,\r\n        initLoading: false,\r\n        gameStarted: false,\r\n        gameFinished: false,\r\n    });\r\n    const [questions, setQuestions] = useState<\r\n        {\r\n            question: string;\r\n            answers: {\r\n                answer: string;\r\n                correct: boolean;\r\n            }[];\r\n        }[]\r\n    >();\r\n    const [indexN, setIndex] = useState<number>(0);\r\n    let [points, setPoints] = useState<number>(0);\r\n    React.useEffect(() => {\r\n        if (quiz === false) return history.push('/');\r\n\r\n        const fetchQuiz = async () => {\r\n            const data = await fetch(\r\n                'http://localhost:3000/quiz/' + params.component.toLowerCase(),\r\n            ).then((data) => data.json());\r\n\r\n            setQuestions(data.questions);\r\n        };\r\n        fetchQuiz();\r\n        //eslint-disable-next-line\r\n    }, []);\r\n\r\n    const handleAnswer = async (ans: { correct: boolean }, index: number) => {\r\n        const divs = document.querySelectorAll('.answers div');\r\n        if (ans.correct) {\r\n            (divs[index] as HTMLDivElement).classList.add('correct');\r\n            points += 5;\r\n            setPoints(points);\r\n        } else {\r\n            points -= 3;\r\n            setPoints(points);\r\n            if (questions && questions[indexN] && questions[indexN].answers) {\r\n                const correctInd = questions[indexN].answers.findIndex(\r\n                    (obj) => obj.correct === true,\r\n                );\r\n                (divs[correctInd] as HTMLDivElement).classList.add('correct');\r\n            }\r\n            divs[index].classList.add('wrong');\r\n        }\r\n        dispatch({ type: 'SET_LOADING' });\r\n        await new Promise((res) =>\r\n            setTimeout(() => res(dispatch({ type: 'FINISH_LOADING' })), 3000),\r\n        );\r\n\r\n        if (questions && !questions[indexN + 1]) {\r\n            dispatch({ type: 'FINISH_GAME' });\r\n        } else {\r\n            divs.forEach((div) => {\r\n                div.classList.remove('correct');\r\n                div.classList.remove('wrong');\r\n            });\r\n            setIndex(indexN + 1);\r\n        }\r\n    };\r\n    if (state.gameFinished) {\r\n        return <EndGame achievedPoints={points} />;\r\n    }\r\n    if (!state.gameStarted)\r\n        return (\r\n            <Intro\r\n                name={params.component}\r\n                setStarted={() => dispatch({ type: 'START_QUIZ' })}\r\n            />\r\n        );\r\n    return (\r\n        <>\r\n            {questions ? (\r\n                questions[indexN] ? (\r\n                    <div className='question-div'>\r\n                        {state.initLoading ? (\r\n                            <div className='quiz-alert'>\r\n                                Procesuiram sledece pitanje...\r\n                            </div>\r\n                        ) : null}\r\n                        <div className='questions'>\r\n                            <div className='question'>\r\n                                {questions[indexN].question}\r\n                            </div>\r\n                            <div className='answers'>\r\n                                {questions[indexN].answers.map(\r\n                                    (answer, index) => (\r\n                                        <div\r\n                                            onClick={() => {\r\n                                                handleAnswer(answer, index);\r\n                                            }}\r\n                                            key={index}>\r\n                                            {answer.answer}\r\n                                        </div>\r\n                                    ),\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div>No more questions for you bro!</div>\r\n                )\r\n            ) : (\r\n                <Loading />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    quiz: state.quiz,\r\n});\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setUser: (data: object) => {\r\n        return dispatch({\r\n            type: 'SET_USER',\r\n            payload: { ...data },\r\n        });\r\n    },\r\n    setQuiz: () => {\r\n        dispatch({\r\n            type: 'FINISH_QUIZ',\r\n        });\r\n    },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);\r\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport './index.css';\r\nimport Wrapper from '../../shared/Wrapper';\r\nimport Loading from '../../shared/Loading';\r\n\r\nconst List: React.FC<{\r\n    usr: {\r\n        name: string;\r\n        points: number;\r\n    };\r\n}> = ({ usr }) => {\r\n    const [users, setUsers] = React.useState<\r\n        { name: string; points: number }[]\r\n    >();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        fetch('http://localhost:3000/getList')\r\n            .then((res) => res.json())\r\n            .then((data) => setUsers(data.data));\r\n    }, []);\r\n\r\n    const handleUser = (name: string) => {\r\n        history.push('/user/' + name);\r\n    };\r\n\r\n    const showContext = (e: any) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    if (!usr) return <Loading />;\r\n    if (!users) return <Loading />;\r\n    return (\r\n        <Wrapper className='intro-div'>\r\n            <table className='table'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Points</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map((user, index) => {\r\n                        if (user.name === usr.name) {\r\n                            return (\r\n                                <React.Fragment key={index}>\r\n                                    <tr\r\n                                        className='table-row'\r\n                                        onContextMenu={showContext}\r\n                                        onClick={() => handleUser(user.name)}\r\n                                        key={index}>\r\n                                        <td style={{ color: 'yellow' }}>\r\n                                            {user.name}\r\n                                        </td>\r\n                                        <td>{user.points}</td>\r\n                                    </tr>\r\n                                </React.Fragment>\r\n                            );\r\n                        } else {\r\n                            return (\r\n                                <tr\r\n                                    onContextMenu={showContext}\r\n                                    className='table-row'\r\n                                    onClick={() => handleUser(user.name)}\r\n                                    key={index}>\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.points}</td>\r\n                                </tr>\r\n                            );\r\n                        }\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: {\r\n    user: {\r\n        name: string;\r\n        points: number;\r\n    };\r\n}) => ({\r\n    usr: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(List);\r\n","import React from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport CustomButton from '../../shared/CustomButton';\r\nimport Wrapper from '../../shared/Wrapper';\r\n\r\nconst User: React.FC = () => {\r\n    const { name } = useParams();\r\n    const history = useHistory();\r\n\r\n    const goList = () => {\r\n        history.push('/list');\r\n    };\r\n    const [user, setUser] = React.useState<{ name: string; points: number }>();\r\n    React.useEffect(() => {\r\n        fetch('http://localhost:3000/getUser?name=' + name)\r\n            .then((res) => res.json())\r\n            .then((data) => setUser(data));\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    if (!user) return <h1>Loading</h1>;\r\n    return (\r\n        <Wrapper>\r\n            <div className='head-user'>{user.name}</div>\r\n            <div>\r\n                <ul className='user-list'>\r\n                    <li>Name: {user.name}</li>\r\n                    <li>Points: {user.points}</li>\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <CustomButton action={goList} label='Return' />\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport Wrapper from '../../shared/Wrapper';\r\nimport sova from '../../assets/images/not-found.png';\r\nimport { Link } from 'react-router-dom';\r\nimport './index.css';\r\n\r\nconst NotFound: React.FC = () => {\r\n    return (\r\n        <Wrapper>\r\n            <div className='image'>\r\n                <img src={sova} alt='Not found' />\r\n            </div>\r\n            <div className='text-message'>\r\n                Oprosti, ali ova stranica ne postoji na nasem sajtu,vrati se na{' '}\r\n                <Link className='link' to='/'>\r\n                    Home\r\n                </Link>\r\n            </div>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Fragment } from 'react';\r\nimport './index.css';\r\n\r\ninterface IProps {\r\n    message: string;\r\n    inSide: boolean;\r\n    setAlert: Function;\r\n}\r\n\r\nconst AlertBox: React.FC<IProps> = ({ message, inSide, setAlert }) => {\r\n    const [loading, setLoading] = React.useState(false);\r\n    React.useEffect(() => {\r\n        if (inSide) {\r\n            setLoading(true);\r\n            setTimeout(() => {\r\n                const setAnimation = async () => {\r\n                    setLoading(false);\r\n                    await new Promise((res) => setTimeout(res, 250));\r\n                    setAlert(false);\r\n                };\r\n                setAnimation();\r\n            }, 3000);\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [inSide]);\r\n    return (\r\n        <Fragment>\r\n            {inSide && (\r\n                <div\r\n                    style={{\r\n                        top: inSide ? 'initial' : '-100px',\r\n                        animation: `${\r\n                            loading ? 'slide-in' : 'slide-out'\r\n                        } 0.5s cubic-bezier(0.445, 0.05, 0.55, 0.95)`,\r\n                    }}\r\n                    className='alert-box'>\r\n                    {message}\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AlertBox;\r\n","import React, { useReducer, ChangeEvent, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport State from '../../interfaces/State';\r\nimport User from '../../interfaces/User';\r\nimport CustomButton from '../../shared/CustomButton';\r\nimport Wrapper from '../../shared/Wrapper';\r\nimport './index.css';\r\nimport 'dotenv/config';\r\n\r\nconst reducer = (\r\n    state = { username: '', password: '' },\r\n    { type, payload }: { type: string; payload: string },\r\n) => {\r\n    if (type === 'CHANGE_USERNAME') {\r\n        return {\r\n            ...state,\r\n            username: payload,\r\n        };\r\n    }\r\n    if (type === 'CHANGE_PASSWORD') {\r\n        return {\r\n            ...state,\r\n            password: payload,\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\ninterface IProps {\r\n    user: User | null;\r\n    setUser: Function;\r\n}\r\nconst Login: React.FC<IProps> = ({ user, setUser }) => {\r\n    const history = useHistory();\r\n    React.useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const handleUsername = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({\r\n            type: 'CHANGE_USERNAME',\r\n            payload: e.target.value as string,\r\n        });\r\n    };\r\n    const handlePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({\r\n            type: 'CHANGE_PASSWORD',\r\n            payload: e.target.value as string,\r\n        });\r\n    };\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        console.log(process.env.API_HOST);\r\n        const response = await fetch(`http://localhost:3000/login`, {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify(state), // body data type must match \"Content-Type\" header\r\n        }).then((res) => res.json());\r\n\r\n        if (response.name) {\r\n            const { status, name, points } = response;\r\n            if (status === 'Logged in') {\r\n                sessionStorage.setItem('user_token', response.token);\r\n                setUser({\r\n                    name,\r\n                    points,\r\n                });\r\n                history.push('/');\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <Wrapper className='login-div'>\r\n            <form onSubmit={submitHandler}>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input type='text' onChange={handleUsername} />\r\n                </div>\r\n                <div>\r\n                    <label>Login</label>\r\n                    <input type='password' onChange={handlePassword} />\r\n                </div>\r\n                <div>\r\n                    <CustomButton\r\n                        style={{ margin: 'auto' }}\r\n                        label='Login'\r\n                        type='submit'\r\n                    />\r\n                </div>\r\n            </form>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State, ownProps: object) => ({\r\n    user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setUser: (data: object) =>\r\n        dispatch({ type: 'SET_USER', payload: { ...data } }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useReducer, ChangeEvent, FormEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport State from '../../interfaces/State';\r\nimport User from '../../interfaces/User';\r\nimport CustomButton from '../../shared/CustomButton';\r\nimport Wrapper from '../../shared/Wrapper';\r\n\r\nconst reducer = (\r\n    state = { username: '', password: '' },\r\n    { type, payload }: { type: string; payload: string },\r\n) => {\r\n    if (type === 'CHANGE_USERNAME') {\r\n        return {\r\n            ...state,\r\n            username: payload,\r\n        };\r\n    }\r\n    if (type === 'CHANGE_PASSWORD') {\r\n        return {\r\n            ...state,\r\n            password: payload,\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\ninterface IProps {\r\n    user: User | null;\r\n    setUser: Function;\r\n}\r\nconst Login: React.FC<IProps> = ({ user, setUser }) => {\r\n    const history = useHistory();\r\n    React.useEffect(() => {\r\n        if (user) {\r\n            history.push('/');\r\n        }\r\n        //eslint-disable-next-line\r\n    }, []);\r\n    const [state, dispatch] = useReducer(reducer, {\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const handleUsername = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({\r\n            type: 'CHANGE_USERNAME',\r\n            payload: e.target.value as string,\r\n        });\r\n    };\r\n    const handlePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        dispatch({\r\n            type: 'CHANGE_PASSWORD',\r\n            payload: e.target.value as string,\r\n        });\r\n    };\r\n    const submitHandler = async (e: FormEvent) => {\r\n        e.preventDefault();\r\n        const response = await fetch('http://localhost:3000/register', {\r\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n            mode: 'cors', // no-cors, *cors, same-origin\r\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n            credentials: 'same-origin', // include, *same-origin, omit\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n            redirect: 'follow', // manual, *follow, error\r\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n            body: JSON.stringify({ ...state, points: 0 }), // body data type must match \"Content-Type\" header\r\n        }).then((res) => res.json());\r\n\r\n        if (response.name) {\r\n            const { status, name, points } = response;\r\n            if (status === 'Logged in') {\r\n                sessionStorage.setItem('user_token', response.token);\r\n\r\n                setUser({\r\n                    name,\r\n                    points,\r\n                });\r\n                history.push('/');\r\n            }\r\n        }\r\n    };\r\n    return (\r\n        <Wrapper className='login-div'>\r\n            <form onSubmit={submitHandler}>\r\n                <div>\r\n                    <label>Username</label>\r\n                    <input type='text' onChange={handleUsername} />\r\n                </div>\r\n                <div>\r\n                    <label>Password</label>\r\n                    <input type='password' onChange={handlePassword} />\r\n                </div>\r\n                <div>\r\n                    <CustomButton\r\n                        style={{ margin: '8px 0px' }}\r\n                        type='submit'\r\n                        label='Register'\r\n                    />\r\n                    <CustomButton type='reset' label='Reset' />\r\n                </div>\r\n            </form>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State, ownProps: object) => ({\r\n    user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    setUser: (data: object) =>\r\n        dispatch({ type: 'SET_USER', payload: { ...data } }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { questions as data } from './fakeProvider/data';\nimport Question from './interfaces/Questions';\nimport User from './interfaces/User';\nimport Header from './components/header';\nimport { Switch, Route, useHistory, Redirect } from 'react-router';\nimport State from './interfaces/State';\nimport PlayComponent from './components/play';\nimport ChooseQuizComponent from './components/chooseQuiz';\nimport History from './components/chooseQuiz/Component';\nimport List from './components/List';\nimport UserPage from './components/List/User';\nimport NotFound from './components/NotFound';\n\nimport { connect } from 'react-redux';\nimport AlertBox from './components/Alertbox';\n\nimport Login from './components/login';\nimport Register from './components/register';\n\ninterface IProps {\n    user: User | null;\n    setUser: Function;\n}\n\nconst App: React.FC<IProps> = ({ user, setUser }) => {\n    const [, setQuestions] = useState<Question[]>();\n    const [alert, setAlert] = useState<boolean>(false);\n    const [back, setBack] = useState<boolean>(false);\n    const history = useHistory();\n    useEffect(() => {\n        history.listen((location) => {\n            if (\n                location.pathname !== '/' &&\n                location.pathname !== '/login' &&\n                location.pathname !== '/register'\n            ) {\n                if (!sessionStorage.getItem('user_token')) {\n                    history.push('/');\n                    if (!alert) {\n                        setAlert(true);\n                    }\n                } else {\n                    async function User() {\n                        const response = await fetch(\n                            'http://localhost:3000/verify',\n                            {\n                                method: 'POST',\n                                headers: {\n                                    'Content-type': 'application/json',\n                                    Authorization:\n                                        'Bearer ' +\n                                        sessionStorage.getItem('user_token'),\n                                },\n                            },\n                        )\n                            .then((res) => res.json())\n                            .then((data) => data);\n                        if (\n                            !response.status ||\n                            response.status !== 'Approved'\n                        ) {\n                            history.push('/');\n                            if (!alert) {\n                                setAlert(true);\n                            }\n                        }\n                    }\n                    User();\n                }\n            }\n            if (location.pathname !== '/') {\n                setBack(true);\n            } else {\n                setBack(false);\n            }\n        });\n        if (sessionStorage.getItem('user_token')) {\n            async function getUser() {\n                const response = await fetch('http://localhost:3000/verify', {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json',\n                        Authorization:\n                            'Bearer ' + sessionStorage.getItem('user_token'),\n                    },\n                })\n                    .then((res) => res.json())\n                    .then((data) => data);\n\n                if (response.status === 'Approved') {\n                    console.log(response);\n                    setUser({\n                        name: response.name,\n                        points: response.points,\n                    });\n                } else if (history.location.pathname !== '/login') {\n                    history.push('/');\n                }\n            }\n            getUser();\n        } else if (\n            history.location.pathname !== '/login' &&\n            history.location.pathname !== '/register'\n        ) {\n            history.push('/');\n        }\n\n        setTimeout(() => {\n            setQuestions(data);\n        }, 50);\n        //eslint-disable-next-line\n    }, []);\n    return (\n        <Fragment>\n            <Fragment>\n                <AlertBox\n                    setAlert={setAlert}\n                    inSide={alert}\n                    message='You must register/login to proceed'\n                />\n\n                <Header back={back} />\n\n                <Switch>\n                    <Route defaultPath exact path='/'>\n                        <PlayComponent />\n                    </Route>\n                    <Route exact path='/choose-quiz'>\n                        <ChooseQuizComponent />\n                    </Route>\n                    <Route exact path='/login'>\n                        <Login />\n                    </Route>\n                    <Route exact path='/list'>\n                        <List />\n                    </Route>\n                    <Route exact path='/register'>\n                        <Register />\n                    </Route>\n                    <Route exact path='/user/:name'>\n                        <UserPage />\n                    </Route>\n                    <Route exact path='/quiz/:component'>\n                        <History />\n                    </Route>\n                    <Route exact path='/not-found'>\n                        <NotFound />\n                    </Route>\n                    <Redirect to='/not-found' />\n                </Switch>\n            </Fragment>\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = (state: State) => ({\n    user: state.user,\n});\nconst mapDispatchToProps = (dispatch: Function) => ({\n    setUser: (data: User) =>\n        dispatch({ type: 'SET_USER', payload: { ...data } }),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createStore } from 'redux';\r\nimport State from '../interfaces/State';\r\nimport User from '../interfaces/User';\r\n\r\nconst initialState: State = {\r\n    user: null,\r\n    quiz: false,\r\n};\r\n\r\nconst quizzReducer = (\r\n    state = initialState,\r\n    { type, payload }: { type: string; payload: object },\r\n) => {\r\n    if (type === 'START_QUIZ') {\r\n        return {\r\n            ...state,\r\n            quiz: true,\r\n        };\r\n    }\r\n    if (type === 'FINISH_QUIZ') {\r\n        return {\r\n            ...state,\r\n            quiz: false,\r\n        };\r\n    }\r\n    if (type === 'REMOVE_USER') {\r\n        return {\r\n            ...state,\r\n            user: null,\r\n        };\r\n    }\r\n    if (type === 'SET_USER') {\r\n        return {\r\n            ...state,\r\n            user: { ...(payload as User) },\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(quizzReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { render } from 'react-dom';\n\nimport './assets/style/index.css';\nimport './assets/style/generics.css';\nimport './assets/style/mobile.css';\nimport './assets/style/animations.css';\n\nimport App from './App';\nimport { Router } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nconst history = createBrowserHistory();\nrender(\n    <Router history={history}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}