{"version":3,"sources":["assets/geography.png","assets/history.jpg","assets/social.png","assets/music.jpg","fakeProvider/data.js","components/header/index.tsx","components/play/index.tsx","components/chooseQuiz/index.tsx","components/chooseQuiz/Geographic.tsx","App.tsx","redux/index.ts","index.tsx"],"names":["module","exports","types","name","image","geography","history","social","music","questions","question","answers","answer","correct","users","points","password","connect","state","ownProps","quiz","dispatch","goBack","type","user","useHistory","className","style","cursor","onClick","push","Play","to","activateQuiz","React","useState","quizes","setQuizes","quizHandler","useEffect","setTimeout","map","index","key","backgroundImage","zIndex","pathname","auth","useLocation","setQuestions","a","fetch","then","data","json","fetchQuiz","App","setUser","defaultPath","exact","path","initialState","store","createStore","payload","createBrowserHistory","render","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,8MCI9BC,EAAQ,CACjB,CACIC,KAAM,aACNC,MAAOC,KAEX,CACIF,KAAM,UACNC,MAAOE,KAEX,CACIH,KAAM,SACNC,MAAOG,KAEX,CACIJ,KAAM,QACNC,MAAOI,MAGFC,EAAY,CACrB,CACIC,SAAU,SACVC,QAAS,CACL,CACIC,OAAQ,MACRC,SAAS,GAEb,CACID,OAAQ,MACRC,SAAS,GAEb,CACID,OAAQ,MACRC,SAAS,GAEb,CACID,OAAQ,MACRC,SAAS,MAKZC,EAAQ,CACjB,CACIX,KAAM,SACNY,OAAQ,EACRC,SAAU,c,cCPHC,eA9BS,SAACC,EAAcC,GAAf,MAAqC,CACzDC,KAAMF,EAAME,SAEW,SAACC,GAAD,MAAyB,CAChDC,OAAQ,kBAAMD,EAAS,CAAEE,KAAM,oBA0BpBN,EAvBkB,SAAC,GAA4B,IAA1BO,EAAyB,EAAzBA,KAAMJ,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACtChB,EAAUmB,cAKhB,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,oBACTN,EAKE,0BAAMO,MAAO,CAAEC,OAAQ,WAAaC,QAZjC,WACfvB,EAAQwB,KAAK,KACbR,MAUY,WAJA,uCACWE,EAAKrB,KADhB,IACuBqB,EAAKT,OAD5B,gB,OCdLgB,EARgB,SAAC,GAAa,EAAXP,KAC9B,OACI,yBAAKE,UAAU,cACX,kBAAC,IAAD,CAAMM,GAAG,gBAAT,WCwCGf,eAAQ,iBAAO,MAJH,SAACI,GAAD,MAAyB,CAChDY,aAAc,kBAAMZ,EAAS,CAAEE,KAAM,mBAG1BN,EAxC+B,SAAC,GAA2B,EAAzBO,KAA0B,IAApBS,EAAmB,EAAnBA,aAAmB,EAC1CC,IAAMC,WADoC,mBAC/DC,EAD+D,KACvDC,EADuD,KAIhEC,EAAc,kBAAMD,EAAUnC,IAIpC,OAHAgC,IAAMK,WAAU,WACZC,WAAWF,EAAa,MACzB,IAEC,yBAAKZ,UAAU,kBACVU,GACGA,EAAOK,KAAI,SAACrB,EAAMsB,GAAP,OACP,yBACIC,IAAKD,EACLf,MAAO,CACHiB,gBAAgB,OAAD,OAASxB,EAAKhB,MAAd,MAEnBsB,UAAU,QACV,kBAAC,IAAD,CACIG,QAAS,kBAAMI,KACfP,UAAU,aACVC,MAAO,CAAEkB,OAAQ,GACjBb,GAAI,CACAc,SAAS,SAAD,OAAW1B,EAAKjB,MACxBe,MAAO,CACH6B,MAAM,KAGd,8BAAO3B,EAAKjB,e,yBCgBzBc,eAJS,SAACC,GAAD,MAAmB,CACvCE,KAAMF,EAAME,QAGDH,EA7CsB,SAAC,GAAc,IAAZG,EAAW,EAAXA,KAE9Bd,GADW0C,cACDvB,eAF+B,EAGbU,qBAHa,mBAGxC1B,EAHwC,KAG7BwC,EAH6B,KAyB/C,OAbAf,IAAMK,WAAU,WACZ,IAAa,IAATnB,EAAgB,OAAOd,EAAQwB,KAAK,MAEzB,uCAAG,4BAAAoB,EAAA,sEACKC,MACf,yCACFC,MAAK,SAACC,GAAD,OAAUA,EAAKC,UAHR,OACRD,EADQ,OAKdJ,EAAaI,EAAK5C,WALJ,2CAAH,qDAOf8C,KACD,IAGC,oCACK9C,GACG,yBAAKiB,UAAU,gBACX,yBAAKA,UAAU,YAAYjB,EAAU,GAAGC,UACxC,yBAAKgB,UAAU,WACVjB,EAAU,GAAGE,QAAQ8B,KAAI,SAAC7B,EAAQ8B,GAAT,OACtB,yBAAKC,IAAKD,GAAQ9B,EAAOA,iBCEtC4C,EAjCO,WAAO,IAAD,EACUrB,qBADV,mBACNc,GADM,aAEAd,qBAFA,mBAEjBX,EAFiB,KAEXiC,EAFW,KASxB,OANAlB,qBAAU,WACNC,YAAW,WACPS,EAAaI,GACbI,EAAQ3C,EAAM,MACf,MACJ,IAEC,kBAAC,WAAD,KACKU,GACG,kBAAC,WAAD,KACI,kBAAC,EAAD,CAAQA,KAAMA,IAEd,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkC,aAAW,EAACC,OAAK,EAACC,KAAK,KAC1B,kBAAC,EAAD,CAAepC,KAAMA,KAEzB,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,gBACd,kBAAC,EAAD,CAAqBpC,KAAMA,KAE/B,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,oBACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAU5B,GAAG,U,uBChC/B6B,EAAsB,CACxBzC,MAAM,GAwBK0C,EAFDC,aAnBO,WAGf,IAFF7C,EAEC,uDAFO2C,EAEP,yCADCtC,EACD,EADCA,KACD,EADOyC,QAER,MAAa,eAATzC,EACO,eACAL,EADP,CAEIE,MAAM,IAGD,gBAATG,EACO,eACAL,EADP,CAEIE,MAAM,IAGPF,KCfLZ,EAAU2D,cAChBC,iBACI,kBAAC,IAAD,CAAQ5D,QAASA,GACb,kBAAC,IAAD,CAAUwD,MAAOA,GACb,kBAAC,EAAD,QAGRK,SAASC,eAAe,W","file":"static/js/main.b25633e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/geography.3e78c53f.png\";","module.exports = __webpack_public_path__ + \"static/media/history.5a99e060.jpg\";","module.exports = __webpack_public_path__ + \"static/media/social.8c6b6452.png\";","module.exports = __webpack_public_path__ + \"static/media/music.1376d7e4.jpg\";","import geography from '../assets/geography.png';\r\nimport history from '../assets/history.jpg';\r\nimport social from '../assets/social.png';\r\nimport music from '../assets/music.jpg';\r\nexport const types = [\r\n    {\r\n        name: 'Geographic',\r\n        image: geography,\r\n    },\r\n    {\r\n        name: 'History',\r\n        image: history,\r\n    },\r\n    {\r\n        name: 'Social',\r\n        image: social,\r\n    },\r\n    {\r\n        name: 'Music',\r\n        image: music,\r\n    },\r\n];\r\nexport const questions = [\r\n    {\r\n        question: 'RARARA',\r\n        answers: [\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n            {\r\n                answer: 'Yea',\r\n                correct: true,\r\n            },\r\n        ],\r\n    },\r\n];\r\nexport const users = [\r\n    {\r\n        name: 'Danilo',\r\n        points: 0,\r\n        password: 'logika123',\r\n    },\r\n];\r\n","import React from 'react';\r\nimport User from '../../interfaces/User';\r\nimport { connect } from 'react-redux';\r\nimport State from '../../interfaces/State';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface IProps {\r\n    user: User;\r\n    quiz: boolean;\r\n    goBack: Function;\r\n}\r\n\r\nconst mapStateToProps = (state: State, ownProps: object) => ({\r\n    quiz: state.quiz,\r\n});\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    goBack: () => dispatch({ type: 'FINISH_QUIZ' }),\r\n});\r\n\r\nconst Header: React.FC<IProps> = ({ user, quiz, goBack }) => {\r\n    const history = useHistory();\r\n    const handleBack = () => {\r\n        history.push('/');\r\n        goBack();\r\n    };\r\n    return (\r\n        <div className='header'>\r\n            <div className='user-header-text'>\r\n                {!quiz ? (\r\n                    <span>\r\n                        Hello {user.name},{user.points} points\r\n                    </span>\r\n                ) : (\r\n                    <span style={{ cursor: 'pointer' }} onClick={handleBack}>\r\n                        Go back\r\n                    </span>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\r\nimport User from '../../interfaces/User';\r\nimport { Link } from 'react-router-dom';\r\ninterface IProps {\r\n    user: User;\r\n}\r\n\r\nconst Play: React.FC<IProps> = ({ user }) => {\r\n    return (\r\n        <div className='start-quiz'>\r\n            <Link to='/choose-quiz'>Start</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Play;\r\n","import React from 'react';\r\nimport User from '../../interfaces/User';\r\nimport { types } from '../../fakeProvider/data';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface IProps {\r\n    user: User;\r\n    activateQuiz: Function;\r\n}\r\nconst ChooseQuizComponent: React.FC<IProps> = ({ user, activateQuiz }) => {\r\n    const [quizes, setQuizes] = React.useState<\r\n        { name: string; image: string }[]\r\n    >();\r\n    const quizHandler = () => setQuizes(types);\r\n    React.useEffect(() => {\r\n        setTimeout(quizHandler, 50);\r\n    }, []);\r\n    return (\r\n        <div className='quiz-selection'>\r\n            {quizes &&\r\n                quizes.map((quiz, index) => (\r\n                    <div\r\n                        key={index}\r\n                        style={{\r\n                            backgroundImage: `url(${quiz.image})`,\r\n                        }}\r\n                        className='quiz'>\r\n                        <Link\r\n                            onClick={() => activateQuiz()}\r\n                            className='quiz-title'\r\n                            style={{ zIndex: 1 }}\r\n                            to={{\r\n                                pathname: `/quiz/${quiz.name}`,\r\n                                state: {\r\n                                    auth: true,\r\n                                },\r\n                            }}>\r\n                            <span>{quiz.name}</span>\r\n                        </Link>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => ({\r\n    activateQuiz: () => dispatch({ type: 'START_QUIZ' }),\r\n});\r\n\r\nexport default connect(() => ({}), mapDispatchToProps)(ChooseQuizComponent);\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport State from '../../interfaces/State';\r\n\r\ninterface IProps {\r\n    quiz: boolean;\r\n}\r\n\r\nconst Geographic: React.FC<IProps> = ({ quiz }) => {\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [questions, setQuestions] = useState<\r\n        {\r\n            question: string;\r\n            answers: {\r\n                answer: string;\r\n                correct: boolean;\r\n            }[];\r\n        }[]\r\n    >();\r\n    React.useEffect(() => {\r\n        if (quiz === false) return history.push('/');\r\n\r\n        const fetchQuiz = async () => {\r\n            const data = await fetch(\r\n                'http://localhost:3000/quiz/geographic',\r\n            ).then((data) => data.json());\r\n\r\n            setQuestions(data.questions);\r\n        };\r\n        fetchQuiz();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {questions && (\r\n                <div className='question-div'>\r\n                    <div className='question'>{questions[0].question}</div>\r\n                    <div className='answers'>\r\n                        {questions[0].answers.map((answer, index) => (\r\n                            <div key={index}>{answer.answer}</div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n    quiz: state.quiz,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Geographic);\r\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { questions as data, users } from './fakeProvider/data';\nimport Question from './interfaces/Questions';\nimport User from './interfaces/User';\nimport Header from './components/header';\nimport { Switch, Route, Router, useHistory, Redirect } from 'react-router';\nimport PlayComponent from './components/play';\nimport ChooseQuizComponent from './components/chooseQuiz';\nimport Geographic from './components/chooseQuiz/Geographic';\n\nconst App: React.FC = () => {\n    const [questions, setQuestions] = useState<Question[]>();\n    const [user, setUser] = useState<User>();\n    useEffect(() => {\n        setTimeout(() => {\n            setQuestions(data);\n            setUser(users[0]);\n        }, 50);\n    }, []);\n    return (\n        <Fragment>\n            {user && (\n                <Fragment>\n                    <Header user={user} />\n\n                    <Switch>\n                        <Route defaultPath exact path='/'>\n                            <PlayComponent user={user} />\n                        </Route>\n                        <Route exact path='/choose-quiz'>\n                            <ChooseQuizComponent user={user} />\n                        </Route>\n                        <Route exact path='/quiz/Geographic'>\n                            <Geographic />\n                        </Route>\n                        <Redirect to='/' />\n                    </Switch>\n                </Fragment>\n            )}\n        </Fragment>\n    );\n};\n\nexport default App;\n","import { createStore } from 'redux';\r\nimport State from '../interfaces/State';\r\n\r\nconst initialState: State = {\r\n    quiz: false,\r\n};\r\n\r\nconst quizzReducer = (\r\n    state = initialState,\r\n    { type, payload }: { type: string; payload: object },\r\n) => {\r\n    if (type === 'START_QUIZ') {\r\n        return {\r\n            ...state,\r\n            quiz: true,\r\n        };\r\n    }\r\n    if (type === 'FINISH_QUIZ') {\r\n        return {\r\n            ...state,\r\n            quiz: false,\r\n        };\r\n    }\r\n    return state;\r\n};\r\n\r\nconst store = createStore(quizzReducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './assets/index.css';\nimport App from './App';\nimport { Router } from 'react-router';\nimport { createBrowserHistory } from 'history';\nimport { Provider } from 'react-redux';\nimport store from './redux';\nconst history = createBrowserHistory();\nrender(\n    <Router history={history}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </Router>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}